name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      release_id:
        description: "Release id (tag name)"
        required: true

env:
  GO_VERSION: 1.20

jobs:
  create_release:
    name: Create release draft
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1 # TODO: replace deprecated action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.release_id }}
          body: |
            Download the stoic binary here:

            - [**MacOS** Intel](https://github.com/skatkov/stoic/releases/download/${{ github.event.inputs.release_id }}/stoic-mac-intel.zip)
            - [**MacOS** M1 (ARM)](https://github.com/skatkov/stoic/releases/download/${{ github.event.inputs.release_id }}/stoic-mac-arm.zip)
            - [**Linux**](https://github.com/skatkov/stoic/releases/download/${{ github.event.inputs.release_id }}/stoic-linux.zip)

          release_name: ${{ github.event.inputs.release_id }}
          prerelease: true
          draft: true

  build:
    name: Build
    needs: create_release
    strategy:
      matrix:
        include:
          - name: linux
            go_os: linux
            go_arch: amd64
            binary_name: stoic
          - name: mac-intel
            go_os: darwin
            go_arch: amd64
            binary_name: stoic
          - name: mac-arm
            go_os: darwin
            go_arch: arm64
            binary_name: stoic
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build binary
        env:
          GOOS: ${{ matrix.go_os }}
          GOARCH: ${{ matrix.go_arch }}
        run: |
          go build -ldflags "-X 'main.BinaryVersion=${{ github.event.inputs.release_id }}' -X 'main.BinaryBuildHash=${{ github.sha }}'" -o ./out/stoic
      - name: Bundle
        run: |
          if [[ "${{ matrix.binary_name }}" != "stoic" ]]; then
            mv ./out/stoic ./out/${{ matrix.binary_name }}
          fi
          zip -j stoic-${{ matrix.name }}.zip ./out/${{ matrix.binary_name }} ./LICENSE ./INSTALL.md ./CHANGELOG.md
      - name: Upload binaries
        uses: actions/upload-release-asset@v1 # TODO: replace deprecated action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./stoic-${{ matrix.name }}.zip
          asset_name: stoic-${{ matrix.name }}.zip
          asset_content_type: application/zip
